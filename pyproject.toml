[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "fossbilling"
version = "0.1.0"
description = "Python SDK for FOSSBilling"
readme = "README.md"
authors = [
    { name = "Your Name", email = "your.email@example.com" },
]
license = { text = "MIT" }
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "build>=1.3.0",
    "requests>=2.28.0",
    "twine>=6.1.0",
]

[project.urls]
"Homepage" = "https://github.com/yourusername/fossbilling-python"
"Bug Tracker" = "https://github.com/yourusername/fossbilling-python/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["fossbilling*"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "-v --cov=fossbilling --cov-report=term-missing"

[coverage.report]
exclude_lines = [
    'pragma: no cover',
    'def __repr__',
    'raise NotImplementedError',
    'if TYPE_CHECKING:',
    'pass',
    'raise ImportError',
]
